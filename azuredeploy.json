{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2",
      "metadata": {
        "description": "The size of the Virtual Hardware Instance."
      },
      "allowedValues": [
        "Standard_D2",
        "Standard_A3",
        "Standard_A4"
      ]
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name to login to the Web Applicatin Firewall."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password to login to the Web Applicatin Firewall."
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Web Application Firewalls for management."
      }
    },
    "licenseToken1": {
      "type": "string",
      "defaultValue": "BHDLA-WTLZR-WZRFJ-ZLWPQ-QJUVXDV",
      "metadata": {
        "description": "The License Token for the first BYOL F5 Web Application Firewall."
      }
    },
    "applicationProtocols": {
      "type": "string",
      "defaultValue": "http;https",
      "metadata": {
        "description": "A semi-colon separated list of protocols (http;https) that will be used to configure the WAF's VIP's, (e.g. http for port 80 and https for SSL)."
      }
    },
    "applicationPorts": {
      "type": "string",
      "defaultValue": "80;443",
      "metadata": {
        "description": "A semi-colon separated list of ports, (80;443) that your applicaiton is listening on, (e.g. 80 and 443)."
      }
    },
    "applicationType": {
      "type": "string",
      "metadata": {
        "description": "Is your application running on a Linux OS or a Windows OS?"
      },
      "defaultValue": "Linux",
      "allowedValues": [
        "Linux",
        "Windows"
      ]
    },
    "blockingLevel": {
      "type": "string",
      "metadata": {
        "description": "Please select how aggressive you would like the blocking level of this WAF to be.  Remember that the more aggressive the blocking level, the more potential there is for false-positives that the WAF might detect."
      },
      "defaultValue": "Medium",
      "allowedValues": [
        "Low",
        "Medium",
        "High"
      ]
    },
    "applicationFQDN": {
      "type": "string",
      "defaultValue": "www.contoso.com",
      "metadata": {
        "description": "The Fully Qualified Domain Name of your application. (e.g. www.example.com)."
      }
    },
    "certSASToken": {
      "type": "string",
      "defaultValue": "?sv=2015-04-05&ss=f&srt=sco&sp=rl&se=2016-08-26T23:17:12Z&st=2016-08-25T15:17:12Z&spr=https&sig=OikZlG4vRhgM9NeuO74btOp4hdj7SKZovLSsG5auoFE%3D",
      "metadata": {
        "description": "The SAS token that you generated for your storage account that contains your certificates. (Optional)"
      }
    },
    "applicationCertificate": {
      "type": "string",
      "defaultValue": "https://thomas02.file.core.windows.net/certs/EIS-WildCard.crt",
      "metadata": {
        "description": "The path to the SSL certificate file in your storage account. (Optional)"
      }
    },
    "applicationKey": {
      "type": "string",
      "defaultValue": "https://thomas02.file.core.windows.net/certs/EIS-WildCard.key",
      "metadata": {
        "description": "The path to the SSL key file in your storage account. (Optional)"
      }
    },
    "applicationChain": {
      "type": "string",
      "defaultValue": "https://thomas02.file.core.windows.net/certs/star.eisconsult.com.ca-bundle",
      "metadata": {
        "description": "The path to the SSL chain file in your storage account. (Optional)"
      }
    }
  },
  "variables": {
    "virtualNetworkName": "[concat(parameters('dnsNameForPublicIP'),'-vnet')]",
    "vnetAddressPrefix": "10.10.0.0/16",
    "subnetName": "[concat(parameters('dnsNameForPublicIP'),'-subNet')]",
    "subnetPrefix": "10.10.1.0/24",
    "ipAddress": "10.10.1.",
    "nicNamePrefix": "[concat(parameters('dnsNameForPublicIP'),'-nic')]",
    "loadBalancerName": "[concat(parameters('dnsNameForPublicIP'),'-alb')]",
    "availabilitySetName": "[concat(parameters('dnsNameForPublicIP'),'-avset')]",
    "newStorageAccountName": "[concat(parameters('dnsNameForPublicIP'),'stor')]",
    "wafNamePrefix": "[concat(parameters('dnsNameForPublicIP'),'-waf')]",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups/',concat(parameters('dnsNameForPublicIP'),'-nsg'))]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
    "guiMgtID": "[concat(variables('lbID'),'/inboundNatRules/guimgt')]",
    "sshMgtID": "[concat(variables('lbID'),'/inboundNatRules/sshmgt')]",
    "publicIPID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('dnsNameForPublicIP'))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "numberOFWAFs": 1
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('dnsNameForPublicIP')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "PublicIPAddress"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicNamePrefix'),copyindex())]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'),'/inboundNatRules/guimgt',copyindex())]",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'),'/inboundNatRules/sshmgt',copyindex())]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('dnsNameForPublicIP'),'-nsg')]"
      ],
      "copy": {
        "count": "[variables('numberOFWAFs')]",
        "name": "niccopy"
      },
      "properties": {
        "networkSecurityGroup": {
          "id": "[variables('nsgID')]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(variables('ipAddress'),add(4,copyindex()))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/', 'loadBalancerBackEnd')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbID'), '/inboundNatRules/', 'guimgt',copyIndex())]"
                },
                {
                  "id": "[concat(variables('lbID'), '/inboundNatRules/', 'sshmgt',copyIndex())]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat(parameters('dnsNameForPublicIP'), '-nsg')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "mgt_rule",
            "properties": {
              "description": "",
              "priority": 101,
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443",
              "protocol": "Tcp",
              "direction": "Inbound",
              "access": "Allow"
            }
          },
          {
            "name": "ssh_rule",
            "properties": {
              "description": "",
              "priority": 102,
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22",
              "protocol": "Tcp",
              "direction": "Inbound",
              "access": "Allow"
            }
          },
          {
            "name": "app_rule_880",
            "properties": {
              "description": "",
              "priority": 103,
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "880",
              "protocol": "Tcp",
              "direction": "Inbound",
              "access": "Allow"
            }
          },
          {
            "name": "app_rule_8444",
            "properties": {
              "description": "",
              "priority": 104,
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "8444",
              "protocol": "Tcp",
              "direction": "Inbound",
              "access": "Allow"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('dnsNameForPublicIP'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('loadBalancerName')]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "loadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "loadBalancerBackEnd"
          }
        ],
        "loadBalancingRules": [
          {
            "Name": "lbrule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/loadBalancerFrontEnd')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/loadBalancerBackEnd')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 880,
              "idleTimeoutInMinutes": 15
            }
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 880,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      },
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('loadBalancerName'),'/guimgt', copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "lbNatLoop",
        "count": "[variables('numberOFWAFs')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('frontEndIPConfigID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(8443)]",
        "backendPort": 443,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('loadBalancerName'),'/sshmgt', copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "lbNatLoop",
        "count": "[variables('numberOFWAFs')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('frontEndIPConfigID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(8022)]",
        "backendPort": 22,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "name": "[variables('availabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('wafNamePrefix'),copyindex())]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "WAFs"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicNamePrefix'), copyindex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]"
      ],
      "copy": {
        "count": "[variables('numberOFWAFs')]",
        "name": "wafcopy"
      },
      "plan": {
        "name": "f5-bigip-virtual-edition-best-byol",
        "publisher": "f5-networks",
        "product": "f5-big-ip"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('wafNamePrefix'),copyindex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "f5-networks",
            "offer": "f5-big-ip",
            "sku": "f5-bigip-virtual-edition-best-byol",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat('osdisk',copyindex())]",
            "vhd": {
              "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('newStorageAccountName'),'/osDisk',copyindex(),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',variables('nicNamePrefix')),copyindex())]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',variables('newstorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "name": "[variables('newStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-05-01-preview",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',variables('wafNamePrefix'),0)]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('wafNamePrefix'),0,'/certs')]",
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.5",
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/tstanley93/Azure-WAF/Single-WAF/start.sh"
          ],
          "commandToExecute": "[concat('bash start.sh ','true',';',concat(variables('wafNamePrefix'),0),';',concat(variables('ipAddress'),4),';',parameters('adminPassword'),';',parameters('licenseToken1'),';',toLower(parameters('dnsNameForPublicIP')),' 880;8444 ',parameters('applicationProtocols'),' ',parameters('applicationFQDN'),';',replace(toLower(resourceGroup().location),' ',''),' ',parameters('applicationPorts'),' ',toLower(parameters('applicationType')),';',toLower(parameters('blockingLevel')),';',toLower(parameters('applicationFQDN')),';',tolower(parameters('applicationCertificate')),';',tolower(parameters('applicationKey')),';',tolower(parameters('applicationChain')),';',parameters('certSASToken'))]"
        }
      }
    }
  ],
  "outputs": {
    "GUI-URL": {
      "type": "string",
      "value": "[concat('https://',reference(variables('publicIPID')).dnsSettings.fqdn,':8443')]"
    },
    "SSH-URL": {
      "type": "string",
      "value": "[concat(reference(variables('publicIPID')).dnsSettings.fqdn,' ',8022)]"
    }
  }
}
